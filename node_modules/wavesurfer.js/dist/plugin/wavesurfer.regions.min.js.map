{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions/index.js","webpack://WaveSurfer.[name]/./src/plugin/regions/region.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RegionsPlugin","params","ws","wavesurfer","util","getRegionSnapToGridValue","maxRegions","getOwnPropertyNames","Observer","forEach","Region","_onBackendCreated","wrapper","drawer","regions","region","add","list","_onReady","dragSelection","enableDragSelection","keys","id","updateRender","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","once","un","length","wouldExceedMaxRegions","on","remove","drag","maxScroll","start","touchId","scrollDirection","wrapperRect","slop","container","scroll","scrollParent","scrollSpeed","scrollThreshold","duration","getDuration","pxMove","eventDown","e","touches","targetTouches","identifier","scrollWidth","clientWidth","getBoundingClientRect","handleEvent","addEventListener","removeEventListener","eventUp","preventClick","fireEvent","document","body","eventMove","end","startUpdate","endUpdate","update","Math","min","max","x","clientX","left","right","edgeScroll","scrollLeft","window","requestAnimationFrame","time","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset","round","regionsUtils","style","regionsUtil","getId","Number","resize","undefined","Boolean","isResizing","isDragging","loop","color","handleStyle","data","attributes","maxLength","minLength","_onRedraw","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","buffer","numberOfChannels","floor","getHeight","formatTimeCallback","bindInOut","render","element","removeChild","play","realTime","playLoop","regionEl","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","width","maxWidth","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","regionWidth","firedIn","firedOut","onProcess","stopPropagation","preventDefault","bindDragEvents","startTime","updated","onDown","target","tagName","toLowerCase","classList","contains","onUp","onMove","oldTime","delta","onDrag","onResize","regionRect","maxEnd","direction"],"mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,UAAW,GAAIH,GACI,iBAAZC,QACdA,QAAiB,QAAID,KAErBD,EAAiB,WAAIA,EAAiB,YAAK,GAAIA,EAAiB,WAAW,QAAIC,KARjF,CASGK,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,8BAIjBhC,EAAoBA,EAAoBiC,EAAI,G,mGCjDrD,W,yjBAgCqBC,E,WA0CjB,WAAYC,EAAQC,GAAI,Y,4FAAA,SACpBtC,KAAKqC,OAASA,EACdrC,KAAKuC,WAAaD,EAClBtC,KAAKwC,K,+VAAL,IACOF,EAAGE,KADV,CAEIC,yBAA0B,SAAApB,GACtB,OAAO,EAAKoB,yBAAyBpB,EAAOgB,MAGpDrC,KAAK0C,WAAaL,EAAOK,WAGK5B,OAAO6B,oBACjC3C,KAAKwC,KAAKI,SAASZ,WAEDa,SAAQ,SAAAlB,GAC1BmB,SAAOd,UAAUL,GAAO,EAAKa,KAAKI,SAASZ,UAAUL,MAEzD3B,KAAKuC,WAAWO,OAASA,SAEzB9C,KAAK+C,kBAAoB,WACrB,EAAKC,QAAU,EAAKT,WAAWU,OAAOD,QAClC,EAAKX,OAAOa,SACZ,EAAKb,OAAOa,QAAQL,SAAQ,SAAAM,GACxB,EAAKC,IAAID,OAMrBnD,KAAKqD,KAAO,GACZrD,KAAKsD,SAAW,WACZ,EAAKN,QAAU,EAAKT,WAAWU,OAAOD,QAClC,EAAKX,OAAOkB,eACZ,EAAKC,oBAAoB,EAAKnB,QAElCvB,OAAO2C,KAAK,EAAKJ,MAAMR,SAAQ,SAAAa,GAC3B,EAAKL,KAAKK,GAAIC,mB,8CArEZtB,GACV,MAAO,CACH1B,KAAM,UACNiD,aAAWvB,IAAUA,EAAOuB,YAAYvB,EAAOuB,UAC/CvB,OAAQA,EACRwB,YAAa,CACTC,UADS,SACCC,GAIN,OAHK/D,KAAKgE,sBAAsBd,SAC5BlD,KAAKiE,WAAW,WAEbjE,KAAKkD,QAAQE,IAAIW,IAG5BG,aARS,WASLlE,KAAKkD,SAAWlD,KAAKkD,QAAQiB,SAGjCX,oBAZS,SAYWO,GACX/D,KAAKgE,sBAAsBd,SAC5BlD,KAAKiE,WAAW,WAEpBjE,KAAKkD,QAAQM,oBAAoBO,IAGrCK,qBAnBS,WAoBLpE,KAAKkD,QAAQkB,yBAGrBC,SAAUjC,O,kCAgDVpC,KAAKuC,WAAW+B,SAChBtE,KAAK+C,oBACL/C,KAAKsD,aAELtD,KAAKuC,WAAWgC,KAAK,QAASvE,KAAKsD,UACnCtD,KAAKuC,WAAWgC,KAAK,kBAAmBvE,KAAK+C,sB,gCAKjD/C,KAAKuC,WAAWiC,GAAG,QAASxE,KAAKsD,UACjCtD,KAAKuC,WAAWiC,GAAG,kBAAmBxE,KAAK+C,mBAC3C/C,KAAKoE,uBACLpE,KAAKmE,U,8CASL,OACInE,KAAK0C,YAAc5B,OAAO2C,KAAKzD,KAAKqD,MAAMoB,QAAUzE,KAAK0C,a,0BAU7DL,GAAQ,WACR,GAAIrC,KAAK0E,wBAAyB,OAAO,KAEzC,IAAMvB,EAAS,IAAInD,KAAKuC,WAAWO,OAAOT,EAAQrC,KAAKwC,KAAMxC,KAAKuC,YAQlE,OANAvC,KAAKqD,KAAKF,EAAOO,IAAMP,EAEvBA,EAAOwB,GAAG,UAAU,kBACT,EAAKtB,KAAKF,EAAOO,OAGrBP,I,8BAMH,WACJrC,OAAO2C,KAAKzD,KAAKqD,MAAMR,SAAQ,SAAAa,GAC3B,EAAKL,KAAKK,GAAIkB,c,0CAIFvC,GAAQ,WACxBrC,KAAKoE,uBAEL,IAMIS,EAEAC,EACAC,EACA5B,EACA6B,EAEAC,EACAC,EAdEC,EAAO9C,EAAO8C,MAAQ,EACtBC,EAAYpF,KAAKuC,WAAWU,OAAOmC,UACnCC,GACgB,IAAlBhD,EAAOgD,QAAoBrF,KAAKuC,WAAWF,OAAOiD,aAChDC,EAAclD,EAAOkD,aAAe,EACpCC,EAAkBnD,EAAOmD,iBAAmB,GAE9CC,EAAWzF,KAAKuC,WAAWmD,cAK3BC,EAAS,EAiCPC,EAAY,SAAAC,GACVA,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,IAGpCgB,EAAW,EAAKlD,WAAWmD,cAC3BV,EAAUa,EAAEE,cAAgBF,EAAEE,cAAc,GAAGC,WAAa,KAG5DlB,EAAY,EAAK9B,QAAQiD,YAAc,EAAKjD,QAAQkD,YACpDhB,EAAc,EAAKlC,QAAQmD,wBAE3BtB,GAAO,EACPE,EAAQ,EAAKxC,WAAWU,OAAOmD,YAAYP,GAAG,GAC9C1C,EAAS,KACT8B,EAAkB,OAEtBjF,KAAKgD,QAAQqD,iBAAiB,YAAaT,GAC3C5F,KAAKgD,QAAQqD,iBAAiB,aAAcT,GAC5C5F,KAAK2E,GAAG,0BAA0B,WAC9B,EAAK3B,QAAQsD,oBAAoB,aAAcV,GAC/C,EAAK5C,QAAQsD,oBAAoB,YAAaV,MAGlD,IAAMW,EAAU,SAAAV,GACRA,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,IAIpCI,GAAO,EACPc,EAAS,EACTV,EAAkB,KAEd9B,IACA,EAAKX,KAAKgE,eACVrD,EAAOsD,UAAU,aAAcZ,GAC/B,EAAKtD,WAAWkE,UAAU,oBAAqBtD,EAAQ0C,IAG3D1C,EAAS,OAEbnD,KAAKgD,QAAQqD,iBAAiB,UAAWE,GACzCvG,KAAKgD,QAAQqD,iBAAiB,WAAYE,GAE1CG,SAASC,KAAKN,iBAAiB,UAAWE,GAC1CG,SAASC,KAAKN,iBAAiB,WAAYE,GAC3CvG,KAAK2E,GAAG,0BAA0B,WAC9B+B,SAASC,KAAKL,oBAAoB,UAAWC,GAC7CG,SAASC,KAAKL,oBAAoB,WAAYC,GAC9C,EAAKvD,QAAQsD,oBAAoB,WAAYC,GAC7C,EAAKvD,QAAQsD,oBAAoB,UAAWC,MAGhD,IAAMK,EAAY,SAAAf,GACd,GAAKhB,OAGCc,GAAUR,MAIZU,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,MAGhCoB,EAAEE,eAAiBF,EAAEE,cAAc,GAAGC,YAAchB,KAKnD7B,IACDA,EAAS,EAAKC,IAAIf,GAAU,MADhC,CAKA,IAAMwE,EAAM,EAAKtE,WAAWU,OAAOmD,YAAYP,GACzCiB,EAAc,EAAKvE,WAAWW,QAAQV,KAAKC,yBAC7CsC,EAAQU,GAENsB,EAAY,EAAKxE,WAAWW,QAAQV,KAAKC,yBAC3CoE,EAAMpB,GAQV,GANAtC,EAAO6D,OAAO,CACVjC,MAAOkC,KAAKC,IAAIH,EAAWD,GAC3BD,IAAKI,KAAKE,IAAIJ,EAAWD,KAIzBzB,GAAUD,EAAUc,YAAc,EAAKlD,QAAQiD,YAAa,CAE5D,IAAMmB,EAAIvB,EAAEwB,QAAUnC,EAAYoC,MAE9BrC,EADAmC,GAAK5B,GACc,EACZ4B,GAAKlC,EAAYqC,MAAQ/B,EACd,EAEA,OA1HX,SAAbgC,EAAa3B,GACf,GAAK1C,GAAW8B,EAAhB,CAKA,IAAIwC,EACA,EAAKzE,QAAQyE,WAAalC,EAAcN,EAC5C,EAAKjC,QAAQyE,WAAaA,EAAaR,KAAKC,IACxCpC,EACAmC,KAAKE,IAAI,EAAGM,IAIhB,IAAMZ,EAAM,EAAKtE,WAAWU,OAAOmD,YAAYP,GAC/C1C,EAAO6D,OAAO,CACVjC,MAAOkC,KAAKC,IAAIL,EAAMpB,EAAUV,EAAQU,GACxCoB,IAAKI,KAAKE,IAAIN,EAAMpB,EAAUV,EAAQU,KAItCgC,EAAa3C,GAAa2C,EAAa,GACvCC,OAAOC,uBAAsB,WACzBH,EAAW3B,OAqGI2B,CAAW3B,MAGtC7F,KAAKgD,QAAQqD,iBAAiB,YAAaO,GAC3C5G,KAAKgD,QAAQqD,iBAAiB,YAAaO,GAC3C5G,KAAK2E,GAAG,0BAA0B,WAC9B,EAAK3B,QAAQsD,oBAAoB,YAAaM,GAC9C,EAAK5D,QAAQsD,oBAAoB,YAAaM,Q,6CAKlD5G,KAAKyG,UAAU,4B,yCAWA,WACTmB,EAAO5H,KAAKuC,WAAWsF,iBACzBX,EAAM,KAUV,OATApG,OAAO2C,KAAKzD,KAAKqD,MAAMR,SAAQ,SAAAa,GAC3B,IAAMoE,EAAM,EAAKzE,KAAKK,GAClBoE,EAAI/C,OAAS6C,GAAQE,EAAIjB,KAAOe,KAC3BV,GAAOY,EAAIjB,IAAMiB,EAAI/C,MAAQmC,EAAIL,IAAMK,EAAInC,SAC5CmC,EAAMY,MAKXZ,I,+CAcc7F,EAAOgB,GAC5B,GAAIA,EAAO0F,mBAAoB,CAE3B,IAAMC,EAAS3F,EAAO4F,kBAAoB,EAC1C,OACIhB,KAAKiB,OAAO7G,EAAQ2G,GAAU3F,EAAO0F,oBACjC1F,EAAO0F,mBACXC,EAKR,OAAO3G,M,gTClZFyB,E,WACT,WAAYT,EAAQ8F,EAAc7F,GAAI,Y,4FAAA,SAClCtC,KAAKuC,WAAaD,EAClBtC,KAAKgD,QAAUV,EAAGW,OAAOD,QACzBhD,KAAKwC,KAAOF,EAAGE,KACfxC,KAAKoI,MAAQpI,KAAKwC,KAAK4F,MACvBpI,KAAKqI,YAAcF,EAEnBnI,KAAK0D,GAAkB,MAAbrB,EAAOqB,GAAapB,EAAGE,KAAK8F,QAAUjG,EAAOqB,GACvD1D,KAAK+E,MAAQwD,OAAOlG,EAAO0C,QAAU,EACrC/E,KAAK6G,IACa,MAAdxE,EAAOwE,IAEH7G,KAAK+E,MACJ,EAAI/E,KAAKgD,QAAQiD,YAAejG,KAAKuC,WAAWmD,cAC/C6C,OAAOlG,EAAOwE,KACxB7G,KAAKwI,YACiBC,IAAlBpG,EAAOmG,QAA8BE,QAAQrG,EAAOmG,QACxDxI,KAAK6E,UAAuB4D,IAAhBpG,EAAOwC,MAA4B6D,QAAQrG,EAAOwC,MAE9D7E,KAAK2I,YAAa,EAClB3I,KAAK4I,YAAa,EAClB5I,KAAK6I,KAAOH,QAAQrG,EAAOwG,MAC3B7I,KAAK8I,MAAQzG,EAAOyG,OAAS,qBAG7B9I,KAAK+I,YAAc1G,EAAO0G,aAAe,CACrCzB,KAAM,GACNC,MAAO,IAEXvH,KAAKgJ,KAAO3G,EAAO2G,MAAQ,GAC3BhJ,KAAKiJ,WAAa5G,EAAO4G,YAAc,GAEvCjJ,KAAKkJ,UAAY7G,EAAO6G,UACxBlJ,KAAKmJ,UAAY9G,EAAO8G,UACxBnJ,KAAKoJ,UAAY,kBAAM,EAAKzF,gBAE5B3D,KAAKqF,QAA2B,IAAlBhD,EAAOgD,QAAoB/C,EAAGD,OAAOiD,aACnDtF,KAAKuF,YAAclD,EAAOkD,aAAe,EACzCvF,KAAKwF,gBAAkBnD,EAAOmD,iBAAmB,GAEjDxF,KAAKqJ,wBAC6BZ,IAA9BpG,EAAOgH,oBAEDX,QAAQrG,EAAOgH,oBAGzB,IAAIC,EACqB,MAArBjH,EAAOiH,YAAsB,EAAIC,SAASlH,EAAOiH,YAIrD,GAHAtJ,KAAKwJ,aAAe,OACpBxJ,KAAKyJ,UAAY,OAEG,IAAhBH,EAAmB,CACnB,IAAII,EACkC,MAAlC1J,KAAKuC,WAAWoH,QAAQC,OAClB5J,KAAKuC,WAAWoH,QAAQC,OAAOC,kBAC9B,EACPH,GAAgB,GAAKJ,EAAaI,IAClC1J,KAAKwJ,aAAevC,KAAK6C,MAAO,EAAIJ,EAAgB,KAAO,IAC3D1J,KAAKyJ,UAAYzJ,KAAKuC,WAAWwH,YAAcT,EAAa,MAIpEtJ,KAAKgK,mBAAqB3H,EAAO2H,mBAEjChK,KAAKiK,YACLjK,KAAKkK,SACLlK,KAAKuC,WAAWoC,GAAG,OAAQ3E,KAAKoJ,WAChCpJ,KAAKuC,WAAWoC,GAAG,SAAU3E,KAAKoJ,WAClCpJ,KAAKuC,WAAWkE,UAAU,iBAAkBzG,M,sDAIzCqC,GACiB,MAAhBA,EAAO0C,QACP/E,KAAK+E,MAAQwD,OAAOlG,EAAO0C,QAEb,MAAd1C,EAAOwE,MACP7G,KAAK6G,IAAM0B,OAAOlG,EAAOwE,MAEV,MAAfxE,EAAOwG,OACP7I,KAAK6I,KAAOH,QAAQrG,EAAOwG,OAEX,MAAhBxG,EAAOyG,QACP9I,KAAK8I,MAAQzG,EAAOyG,OAEE,MAAtBzG,EAAO0G,cACP/I,KAAK+I,YAAc1G,EAAO0G,aAEX,MAAf1G,EAAO2G,OACPhJ,KAAKgJ,KAAO3G,EAAO2G,MAEF,MAAjB3G,EAAOmG,SACPxI,KAAKwI,OAASE,QAAQrG,EAAOmG,SAEd,MAAfnG,EAAOwC,OACP7E,KAAK6E,KAAO6D,QAAQrG,EAAOwC,OAEP,MAApBxC,EAAO6G,YACPlJ,KAAKkJ,UAAYX,OAAOlG,EAAO6G,YAEX,MAApB7G,EAAO8G,YACPnJ,KAAKmJ,UAAYZ,OAAOlG,EAAO8G,YAEV,MAArB9G,EAAO4G,aACPjJ,KAAKiJ,WAAa5G,EAAO4G,YAG7BjJ,KAAK2D,eACL3D,KAAKyG,UAAU,UACfzG,KAAKuC,WAAWkE,UAAU,iBAAkBzG,Q,+BAKxCA,KAAKmK,UACLnK,KAAKgD,QAAQoH,YAAYpK,KAAKmK,SAC9BnK,KAAKmK,QAAU,KACfnK,KAAKyG,UAAU,UACfzG,KAAKuC,WAAWiC,GAAG,OAAQxE,KAAKoJ,WAChCpJ,KAAKuC,WAAWiC,GAAG,SAAUxE,KAAKoJ,WAClCpJ,KAAKuC,WAAWkE,UAAU,iBAAkBzG,S,2BAQ/C+E,GACD,IAAM5C,EAAI4C,GAAS/E,KAAK+E,MACxB/E,KAAKuC,WAAW8H,KAAKlI,EAAGnC,KAAK6G,KAC7B7G,KAAKyG,UAAU,QACfzG,KAAKuC,WAAWkE,UAAU,cAAezG,Q,+BAOpC+E,GAAO,WACN5C,EAAI4C,GAAS/E,KAAK+E,MACxB/E,KAAKuC,WAAW8H,KAAKlI,GACrBnC,KAAKuE,KAAK,OAAO,WACb,IAAM+F,EAAW,EAAK/H,WAAWsF,iBACjC,GAAIyC,GAAY,EAAKvF,OAASuF,GAAY,EAAKzD,IAC3C,OAAO,EAAK0D,gB,+BAOpB,IAAMC,EAAW9D,SAAS+D,cAAc,UAMxC,IAAK,IAAMC,KAJXF,EAASG,UAAY,oBACrBH,EAASI,MAAQ5K,KAAK6K,WAAW7K,KAAK+E,MAAO/E,KAAK6G,KAClD2D,EAASM,aAAa,UAAW9K,KAAK0D,IAEf1D,KAAKiJ,WACxBuB,EAASM,aACL,eAAiBJ,EACjB1K,KAAKiJ,WAAWyB,IAYxB,GARA1K,KAAKoI,MAAMoC,EAAU,CACjBO,SAAU,WACVC,OAAQ,EACRC,OAAQjL,KAAKwJ,aACb0B,IAAKlL,KAAKyJ,YAIVzJ,KAAKwI,OAAQ,CACb,IAAM2C,EAAaX,EAASY,YACxB1E,SAAS+D,cAAc,WAErBY,EAAcb,EAASY,YACzB1E,SAAS+D,cAAc,WAG3BU,EAAWR,UAAY,4CACvBU,EAAYV,UAAY,0CAGxB,IAAMW,EAAM,CACRC,OAAQ,aACRR,SAAU,WACVG,IAAK,MACLM,MAAO,KACPC,SAAU,MACVR,OAAQ,OACRS,gBAAiB,oBAIfC,EACwB,SAA1B3L,KAAK+I,YAAYzB,KACXxG,OAAO8K,OAAO,CAAEtE,KAAM,OAASgE,EAAKtL,KAAK+I,YAAYzB,MACrD,KACJuE,EACyB,SAA3B7L,KAAK+I,YAAYxB,MACXzG,OAAO8K,OACL,CAAErE,MAAO,OACT+D,EACAtL,KAAK+I,YAAYxB,OAEnB,KAENoE,GACA3L,KAAKoI,MAAM+C,EAAYQ,GAGvBE,GACA7L,KAAKoI,MAAMiD,EAAaQ,GAIhC7L,KAAKmK,QAAUnK,KAAKgD,QAAQoI,YAAYZ,GACxCxK,KAAK2D,eACL3D,KAAK8L,WAAWtB,K,iCAGTzF,EAAO8B,GACd,OAAI7G,KAAKgK,mBACEhK,KAAKgK,mBAAmBjF,EAAO8B,IAElC9B,GAAS8B,EAAM,CAAC9B,GAAS,CAACA,EAAO8B,IACpCkF,KAAI,SAAAnE,GAAI,MACL,CACIX,KAAK6C,MAAOlC,EAAO,KAAQ,KAC1B,KAAOX,KAAK6C,MAAMlC,EAAO,KAAKoE,OAAO,IACxCC,KAAK,QAEVA,KAAK,O,iCAIV,OAAOjM,KAAKuC,WAAWU,OAAOuI,MAAQxL,KAAKuC,WAAWF,OAAO6J,a,qCAM7D,IAAMC,EAAMnM,KAAKuC,WAAWmD,cACtB8F,EAAQxL,KAAKoM,WAEfC,EAAerM,KAAK+E,MACpBuH,EAAatM,KAAK6G,IAkBtB,GAjBIwF,EAAe,IAEfC,GADAD,EAAe,GAGfC,EAAaH,IAEbE,EAAeF,IADfG,EAAaH,GACsBE,IAGjB,MAAlBrM,KAAKmJ,YACLmD,EAAarF,KAAKE,IAAIkF,EAAerM,KAAKmJ,UAAWmD,IAGnC,MAAlBtM,KAAKkJ,YACLoD,EAAarF,KAAKC,IAAImF,EAAerM,KAAKkJ,UAAWoD,IAGrC,MAAhBtM,KAAKmK,QAAiB,CAGtB,IAAM7C,EAAOL,KAAKiB,MAAOmE,EAAeF,EAAOX,GACzCe,EAActF,KAAKiB,MAAOoE,EAAaH,EAAOX,GAASlE,EAS7D,IAAK,IAAMoD,KAPX1K,KAAKoI,MAAMpI,KAAKmK,QAAS,CACrB7C,KAAMA,EAAO,KACbkE,MAAOe,EAAc,KACrBb,gBAAiB1L,KAAK8I,MACtByC,OAAQvL,KAAK6E,KAAO,OAAS,YAGV7E,KAAKiJ,WACxBjJ,KAAKmK,QAAQW,aACT,eAAiBJ,EACjB1K,KAAKiJ,WAAWyB,IAIxB1K,KAAKmK,QAAQS,MAAQ5K,KAAK6K,WAAW7K,KAAK+E,MAAO/E,KAAK6G,Q,kCAKlD,WACR7G,KAAKwM,SAAU,EACfxM,KAAKyM,UAAW,EAEhB,IAAMC,EAAY,SAAA9E,GACd,IAAI7C,EAAQkC,KAAKiB,MAAmB,GAAb,EAAKnD,OAAc,GACtC8B,EAAMI,KAAKiB,MAAiB,GAAX,EAAKrB,KAAY,GACtCe,EAAOX,KAAKiB,MAAa,GAAPN,GAAa,IAG1B,EAAK6E,UACN,EAAKD,UACJzH,EAAQ6C,GAAQf,GAAOe,KAExB,EAAK6E,UAAW,EAChB,EAAKD,SAAU,EACf,EAAK/F,UAAU,OACf,EAAKlE,WAAWkE,UAAU,aAAc,KAEvC,EAAK+F,SAAWzH,GAAS6C,GAAQf,EAAMe,IACxC,EAAK4E,SAAU,EACf,EAAKC,UAAW,EAChB,EAAKhG,UAAU,MACf,EAAKlE,WAAWkE,UAAU,YAAa,KAI/CzG,KAAKuC,WAAWoH,QAAQhF,GAAG,eAAgB+H,GAE3C1M,KAAK2E,GAAG,UAAU,WACd,EAAKpC,WAAWoH,QAAQnF,GAAG,eAAgBkI,MAI/C1M,KAAK2E,GAAG,OAAO,WACP,EAAKkE,MACL,EAAKtG,WAAW8H,KAAK,EAAKtF,Y,mCAMzB,WACHsE,EAAqBrJ,KAAKqJ,mBAEhCrJ,KAAKmK,QAAQ9D,iBAAiB,cAAc,SAAAR,GACxC,EAAKY,UAAU,aAAcZ,GAC7B,EAAKtD,WAAWkE,UAAU,oBAAqB,EAAMZ,MAGzD7F,KAAKmK,QAAQ9D,iBAAiB,cAAc,SAAAR,GACxC,EAAKY,UAAU,aAAcZ,GAC7B,EAAKtD,WAAWkE,UAAU,oBAAqB,EAAMZ,MAGzD7F,KAAKmK,QAAQ9D,iBAAiB,SAAS,SAAAR,GACnCA,EAAE8G,kBACF9G,EAAE+G,iBACF,EAAKnG,UAAU,QAASZ,GACxB,EAAKtD,WAAWkE,UAAU,eAAgB,EAAMZ,MAGpD7F,KAAKmK,QAAQ9D,iBAAiB,YAAY,SAAAR,GACtCA,EAAE8G,kBACF9G,EAAE+G,iBACF,EAAKnG,UAAU,WAAYZ,GAC3B,EAAKtD,WAAWkE,UAAU,kBAAmB,EAAMZ,MAGvD7F,KAAKmK,QAAQ9D,iBAAiB,eAAe,SAAAR,GACrCwD,GACAxD,EAAE+G,iBAEN,EAAKnG,UAAU,cAAeZ,GAC9B,EAAKtD,WAAWkE,UAAU,qBAAsB,EAAMZ,OAItD7F,KAAK6E,MAAQ7E,KAAKwI,SAClBxI,KAAK6M,mB,uCAII,IAITC,EACA9H,EACAH,EACAC,EACA0D,EAEAvD,EACAC,EAXS,OACPE,EAAYpF,KAAKuC,WAAWU,OAAOmC,UACnCG,EAAcvF,KAAKuF,YACnBC,EAAkBxF,KAAKwF,gBAMzBuH,GAAU,EAmCRC,EAAS,SAAAnH,GACX,IAAMJ,EAAW,EAAKlD,WAAWmD,cAC7BG,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,IAGpCO,EAAUa,EAAEE,cAAgBF,EAAEE,cAAc,GAAGC,WAAa,MAIxD,EAAKnB,MAAQ,EAAK2D,SAClB3C,EAAE8G,kBAING,EAAY,EAAKzE,YAAY5F,yBACzB,EAAKF,WAAWU,OAAOmD,YAAYP,GAAG,GAAQJ,GAIlDX,EAAY,EAAK9B,QAAQiD,YAAc,EAAKjD,QAAQkD,YACpDhB,EAAc,EAAKlC,QAAQmD,wBAE3B,EAAKwC,YAAa,EAClB,EAAKC,YAAa,EACqB,WAAnC/C,EAAEoH,OAAOC,QAAQC,eACjB,EAAKxE,YAAa,EAClBH,EAAS3C,EAAEoH,OAAOG,UAAUC,SAAS,2BAC/B,QACA,QAEN,EAAKzE,YAAa,EAClB/D,GAAO,EACP2D,GAAS,KAGX8E,EAAO,SAAAzH,GACLA,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,KAIhCI,GAAQ2D,KACR,EAAKI,YAAa,EAClB,EAAKD,YAAa,EAClB9D,GAAO,EACPI,EAAkB,KAClBuD,GAAS,GAGTuE,IACAA,GAAU,EACV,EAAKvK,KAAKgE,eACV,EAAKC,UAAU,aAAcZ,GAC7B,EAAKtD,WAAWkE,UAAU,oBAAqB,EAAMZ,MAGvD0H,EAAS,SAAA1H,GACX,IAAMJ,EAAW,EAAKlD,WAAWmD,cAEjC,KAAIG,EAAEC,SAAWD,EAAEC,QAAQrB,OAAS,MAGhCoB,EAAEE,eAAiBF,EAAEE,cAAc,GAAGC,YAAchB,KAGnDH,GAAS2D,GAAd,CAIA,IAAMgF,EAAUV,EACVlF,EAAO,EAAKS,YAAY5F,yBAC1B,EAAKF,WAAWU,OAAOmD,YAAYP,GAAKJ,GAGtCgI,EAAQ7F,EAAOkF,EAerB,GAdAA,EAAYlF,EAGR,EAAK/C,MAAQA,IACbkI,EAAUA,KAAaU,EACvB,EAAKC,OAAOD,IAIZ,EAAKjF,QAAUA,IACfuE,EAAUA,KAAaU,EACvB,EAAKE,SAASF,EAAOjF,IAIrB,EAAKnD,QACLD,EAAUc,YAAc,EAAKlD,QAAQiD,YACvC,CACE,GAAIpB,EAAM,CAGN,IAAM+I,EAAa,EAAKzD,QAAQhE,wBAC5BiB,EAAIwG,EAAWtG,KAAOpC,EAAYoC,KAGlCM,EAAO4F,GAAWpG,GAAK,EACvBnC,GAAmB,EAEnB2C,EAAO4F,GACPpG,EAAIwG,EAAWpC,OAAStG,EAAYqC,QAEpCtC,EAAkB,KAKI,IAArBA,GAA0BmC,EAAI5B,GACV,IAApBP,GACGmC,EAAIwG,EAAWpC,MACftG,EAAYqC,MAAQ/B,KAExBP,EAAkB,UAEnB,CAEH,IAAImC,EAAIvB,EAAEwB,QAAUnC,EAAYoC,KAI5BrC,EADAmC,GAAK5B,GACc,EACZ4B,GAAKlC,EAAYqC,MAAQ/B,EACd,EAEA,KAItBP,GAjKO,SAAbuC,EAAa3B,GACf,IAAMJ,EAAW,EAAKlD,WAAWmD,cACjC,GAAKT,IAAqBJ,GAAS2D,GAAnC,CAKA,IAAIf,EACA,EAAKzE,QAAQyE,WAAalC,EAAcN,EAC5C,EAAKjC,QAAQyE,WAAaA,EAAaR,KAAKC,IACxCpC,EACAmC,KAAKE,IAAI,EAAGM,IAIhB,IAAMG,EAAO,EAAKS,YAAY5F,yBAC1B,EAAKF,WAAWU,OAAOmD,YAAYP,GAAKJ,GAEtCgI,EAAQ7F,EAAOkF,EACrBA,EAAYlF,EAGZ/C,EAAO,EAAK6I,OAAOD,GAAS,EAAKE,SAASF,EAAOjF,GAGjDd,OAAOC,uBAAsB,WACzBH,EAAW3B,OAwIP2B,CAAW3B,MAKvB7F,KAAKmK,QAAQ9D,iBAAiB,YAAa2G,GAC3ChN,KAAKmK,QAAQ9D,iBAAiB,aAAc2G,GAE5ChN,KAAKgD,QAAQqD,iBAAiB,YAAakH,GAC3CvN,KAAKgD,QAAQqD,iBAAiB,YAAakH,GAE3C7G,SAASC,KAAKN,iBAAiB,UAAWiH,GAC1C5G,SAASC,KAAKN,iBAAiB,WAAYiH,GAE3CtN,KAAK2E,GAAG,UAAU,WACd+B,SAASC,KAAKL,oBAAoB,UAAWgH,GAC7C5G,SAASC,KAAKL,oBAAoB,WAAYgH,GAC9C,EAAKtK,QAAQsD,oBAAoB,YAAaiH,GAC9C,EAAKvK,QAAQsD,oBAAoB,YAAaiH,MAGlDvN,KAAKuC,WAAWoC,GAAG,WAAW,WAC1B+B,SAASC,KAAKL,oBAAoB,UAAWgH,GAC7C5G,SAASC,KAAKL,oBAAoB,WAAYgH,Q,6BAI/CG,GACH,IAAMI,EAAS7N,KAAKuC,WAAWmD,cAC3B1F,KAAK6G,IAAM4G,EAAQI,GAAU7N,KAAK+E,MAAQ0I,EAAQ,GAItDzN,KAAKgH,OAAO,CACRjC,MAAO/E,KAAK+E,MAAQ0I,EACpB5G,IAAK7G,KAAK6G,IAAM4G,M,+BAIfA,EAAOK,GACM,UAAdA,EACA9N,KAAKgH,OAAO,CACRjC,MAAOkC,KAAKC,IAAIlH,KAAK+E,MAAQ0I,EAAOzN,KAAK6G,KACzCA,IAAKI,KAAKE,IAAInH,KAAK+E,MAAQ0I,EAAOzN,KAAK6G,OAG3C7G,KAAKgH,OAAO,CACRjC,MAAOkC,KAAKC,IAAIlH,KAAK6G,IAAM4G,EAAOzN,KAAK+E,OACvC8B,IAAKI,KAAKE,IAAInH,KAAK6G,IAAM4G,EAAOzN,KAAK+E,c","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n *  @since 4.0.0 This class has been split\n *\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n */\n\nimport {Region} from \"./region.js\";\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     * @private\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) return null;\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) return;\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n","/**\n *  @since 4.0.0\n *\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n        \n        this.formatTimeCallback = params.formatTimeCallback;\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s);\n        this.once('out', () => {\n            const realTime = this.wavesurfer.getCurrentTime();\n            if (realTime >= this.start && realTime <= this.end) {\n                return this.playLoop();\n            }\n        });\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign({ left: '0px' }, css, this.handleStyle.left)\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                        { right: '0px' },\n                        css,\n                        this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(handleLeft, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(handleRight, handleRightCss);\n            }\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        if (this.formatTimeCallback) {\n            return this.formatTimeCallback(start, end);\n        }\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', e => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Get the currently selected time according to the mouse position\n            const time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(e);\n            });\n        };\n\n        const onDown = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                e.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e, true) * duration\n            );\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (e.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = e.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', this, e);\n            }\n        };\n        const onMove = e => {\n            const duration = this.wavesurfer.getDuration();\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            const time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll &&\n                container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                if (drag) {\n                    // The threshold is not between the mouse and the container edge\n                    // but is between the region and the container edge\n                    const regionRect = this.element.getBoundingClientRect();\n                    let x = regionRect.left - wrapperRect.left;\n\n                    // Check direction\n                    if (time < oldTime && x >= 0) {\n                        scrollDirection = -1;\n                    } else if (\n                        time > oldTime &&\n                        x + regionRect.width <= wrapperRect.right\n                    ) {\n                        scrollDirection = 1;\n                    }\n\n                    // Check that we are still beyond the threshold\n                    if (\n                        (scrollDirection === -1 && x > scrollThreshold) ||\n                        (scrollDirection === 1 &&\n                            x + regionRect.width <\n                            wrapperRect.right - scrollThreshold)\n                    ) {\n                        scrollDirection = null;\n                    }\n                } else {\n                    // Mouse based threshold\n                    let x = e.clientX - wrapperRect.left;\n\n                    // Check direction\n                    if (x <= scrollThreshold) {\n                        scrollDirection = -1;\n                    } else if (x >= wrapperRect.right - scrollThreshold) {\n                        scrollDirection = 1;\n                    } else {\n                        scrollDirection = null;\n                    }\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(e);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        this.wrapper.addEventListener('mousemove', onMove);\n        this.wrapper.addEventListener('touchmove', onMove);\n\n        document.body.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            this.wrapper.removeEventListener('mousemove', onMove);\n            this.wrapper.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction === 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n"],"sourceRoot":""}